// <auto-generated />
using System;
using CheckPoint1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheckPoint1.Migrations
{
    [DbContext(typeof(CheckpointContext))]
    partial class CheckpointContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("CheckPoint1.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9027),
                            Descricao = "Produtos eletrônicos em geral",
                            Nome = "Eletrônicos"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9051),
                            Descricao = "Vestuário e acessórios",
                            Nome = "Roupas"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9053),
                            Descricao = "Itens para casa e decoração",
                            Nome = "Casa"
                        });
                });

            modelBuilder.Entity("CheckPoint1.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEP")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            CEP = "01234567",
                            CPF = "12345678901",
                            Cidade = "São Paulo",
                            DataCadastro = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9217),
                            Email = "joao@email.com",
                            Endereco = "Rua das Flores, 123",
                            Estado = "SP",
                            Nome = "João Silva",
                            Telefone = "11999999999"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            CEP = "01310100",
                            CPF = "98765432100",
                            Cidade = "São Paulo",
                            DataCadastro = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9220),
                            Email = "maria@email.com",
                            Endereco = "Av. Paulista, 456",
                            Estado = "SP",
                            Nome = "Maria Santos",
                            Telefone = "11888888888"
                        });
                });

            modelBuilder.Entity("CheckPoint1.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("NumeroPedido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("NumeroPedido")
                        .IsUnique();

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            DataPedido = new DateTime(2025, 9, 29, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9239),
                            NumeroPedido = "PED-001",
                            Status = 2,
                            ValorTotal = 929.98m
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            DataPedido = new DateTime(2025, 10, 2, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9246),
                            NumeroPedido = "PED-002",
                            Status = 1,
                            ValorTotal = 379.98m
                        });
                });

            modelBuilder.Entity("CheckPoint1.Models.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoItens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PedidoId = 1,
                            PrecoUnitario = 899.99m,
                            ProdutoId = 1,
                            Quantidade = 1
                        },
                        new
                        {
                            Id = 2,
                            PedidoId = 1,
                            PrecoUnitario = 29.99m,
                            ProdutoId = 3,
                            Quantidade = 1
                        },
                        new
                        {
                            Id = 3,
                            PedidoId = 2,
                            PrecoUnitario = 299.99m,
                            ProdutoId = 5,
                            Quantidade = 1
                        },
                        new
                        {
                            Id = 4,
                            PedidoId = 2,
                            PrecoUnitario = 79.99m,
                            ProdutoId = 4,
                            Quantidade = 1
                        });
                });

            modelBuilder.Entity("CheckPoint1.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Estoque")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9182),
                            Descricao = "Smartphone Android",
                            Estoque = 50,
                            Nome = "Smartphone",
                            Preco = 899.99m
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9185),
                            Descricao = "Notebook Intel Core i5",
                            Estoque = 0,
                            Nome = "Notebook",
                            Preco = 1899.99m
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9187),
                            Descricao = "Camiseta 100% algodão",
                            Estoque = 100,
                            Nome = "Camiseta",
                            Preco = 29.99m
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9190),
                            Descricao = "Calça jeans masculina",
                            Estoque = 30,
                            Nome = "Calça Jeans",
                            Preco = 79.99m
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9192),
                            Descricao = "Mesa de centro em madeira",
                            Estoque = 15,
                            Nome = "Mesa de Centro",
                            Preco = 299.99m
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2025, 10, 4, 23, 58, 10, 116, DateTimeKind.Local).AddTicks(9195),
                            Descricao = "Luminária de mesa LED",
                            Estoque = 25,
                            Nome = "Luminária",
                            Preco = 49.99m
                        });
                });

            modelBuilder.Entity("CheckPoint1.Models.Pedido", b =>
                {
                    b.HasOne("CheckPoint1.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CheckPoint1.Models.PedidoItem", b =>
                {
                    b.HasOne("CheckPoint1.Models.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheckPoint1.Models.Produto", "Produto")
                        .WithMany("PedidoItens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("CheckPoint1.Models.Produto", b =>
                {
                    b.HasOne("CheckPoint1.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CheckPoint1.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("CheckPoint1.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("CheckPoint1.Models.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("CheckPoint1.Models.Produto", b =>
                {
                    b.Navigation("PedidoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
